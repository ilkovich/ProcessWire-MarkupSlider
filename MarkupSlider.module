<?php

class MarkupSlider extends ModuleJS {

    protected $images; 
    protected $width  = 0;
    protected $height = 0; 
    protected $theme  = 'default';
    protected $useCaptions = false;

    public $id = 'slider';
	
	public static function getModuleInfo() {
		return array(
                'title' => 'Slider Markup For Image Collection', 
                'summary' => 'Generates HTML markup for images to be presented in a nivoslider', 
                'version' => 102, 
			);
	}

	public function init() {
		$this->modules->get("JqueryCore"); 

		parent::init();

		$class = $this->className();
		$info = $this->getModuleInfo();
		$version = (int) $info['version']; 

		$this->config->styles->add($this->config->urls->$class . "nivo/nivo-slider.css?v=$version"); 
		$this->config->scripts->add($this->config->urls->$class . "nivo/jquery.nivo.slider.js?v=$version"); 
	}

    /**
     *  Getters/Setters
     */
    public function getTheme() { return $this->theme; }
    public function setTheme($t) { 
        $this->theme  = $t; 

		$class = $this->className();
		$info = $this->getModuleInfo();
		$version = (int) $info['version']; 
        if(in_array($this->theme, array('default', 'light', 'dark', 'bar'))) 
            $this->config->styles->add($this->config->urls->$class . "nivo/themes/{$this->theme}/{$this->theme}.css?v=$version");
        else
            $this->config->styles->add($this->config->urls->$class . "themes/{$this->theme}/{$this->theme}.css?v=$version");
    }
        
    public function getWidth() { return $this->width; }
    public function setWidth($w) { $this->width = $w; }

    public function getHeight() { return $this->height; }
    public function setHeight($h) { $this->height = $h; }

    public function getImages() { return $this->images; }
    public function setImages($i) { $this->images = $i; }

    public function getCaptions() { return $this->useCaptions; }
    public function setCaptions($useCaptions) { $this->useCaptions = $useCaptions; }
    
    /**
     * ___render 
     * Render the markup
     * @access public
     * @return void
     */
    public function ___render() {

        $first = true;
        $images = array();
            $out = '';
        foreach($this->images as $img) {
            $sized = $img->size($this->width, $this->height)->url;
            $caption = $this->useCaptions ? "title='{$img->description}'" : '';
            //$onload = $first ? 'onload="$(this).trigger(\'imageload\')"' : '';
            //$onload = $first ? 'onload="window.alert(\'here\')"' : '';
            
            if($first) {
                $out .= <<<EOM
                <img src='$sized' alt='{$img->description}' $caption />
                <div class="slider-wrapper theme-{$this->theme}">
                    <div class="ribbon"></div>
                    <div id="{$this->id}" class="nivoSlider">
EOM;
            }
            else 
                $images[] = "<img src='$sized' alt='{$img->description}' $caption />";            
            
            $first = false;
        };

        if(!isset(wire('config')->inlineScripts)) wire('config')->inlineScripts = new InlineScriptArray();

        $script = "
            window.NivoSlider = window.NivoSlider || {};
            NivoSlider.sliders = NivoSlider.sliders || {};
            NivoSlider.sliders.{$this->id} =  JSON.parse('" . preg_replace("@'@", "\\'", json_encode($images)) . "');
        ";
        wire('config')->inlineScripts->add('NivoSlider', $script);

        $out .= <<<EOM
            </div>
        </div>
EOM;
        return $out;
    }

	/** the following are specific to the Module interface **/
	public function isSingular() {
		return false; 
	}

	public function isAutoload() {
		return false; 
	}

}
